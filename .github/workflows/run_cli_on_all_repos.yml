# This workflow only runs when manually triggered, and calls a reusable workflow to run the CLI on all repos in OpenNeuroDatasets-JSONLD.
name: Run CLI on all repos

on:
  workflow_dispatch:
    inputs:
      max_num_datasets:
        description: "Max number of datasets to run the CLI on. Set to 0 to run on all datasets."
        required: false
        default: "180"
      # TODO: We could probably combine reset_sha, reset_failed_datasets, and clear_old_jsonlds into a single input
      # since they should all be set to the same value for any given run.
      reset_sha:
        description: "Whether to reset the sha.txt file"
        required: false
        default: "false"
        type: choice
        options:
          - "true"
          - "false"
      reset_failed_datasets:
        description: "Whether to clear the failed_cli_datasets.txt file"
        required: false
        default: "false"
        type: choice
        options:
          - "true"
          - "false"
      clear_old_jsonlds:
        description: "Whether to delete all existing JSONLD files in neurobagel/openneuro-annotations"
        required: false
        default: "false"
        type: choice
        options:
          - "true"
          - "false"

jobs:
    get-repos:
      name: Get repos
      runs-on: ubuntu-latest
      outputs:
        dataset_list: ${{ steps.get-repos.outputs.repos }}

      steps:
        - name: Checkout
          uses: actions/checkout@v4

        - name: Resetting sha.txt
          if: ${{ github.event.inputs.reset_sha == 'true' }}
          run: |
            echo "Resetting existing sha.txt file."
            > code/sha.txt

        # When running the CLI on all repos, we want to initially clear any existing failed_cli_datasets.txt
        # so that sha_scraper.sh doesn't skip repos that failed when the CLI was last run.
        - name: Reset failed_cli_datasets.txt
          if: ${{ github.event.inputs.reset_failed_datasets == 'true' }}
          run: |
            echo "Resetting failed_cli_datasets.txt"
            > code/failed_cli_datasets.txt

        # This step gets a list of all repos in OpenNeuroDatasets-JSONLD, and fetches each repo's latest SHA.
        # If the repo contains the required files for the bagel CLI, the repo ID and its latest SHA are written to a job output variable "repos"
        # which forms the list the CLI will run on.
        # Otherwise, the repo SHA is written directly to sha.txt.
        - id: get-repos
          name: Get repos
          env:
            GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          working-directory: code
          # NOTE: When a repo doesn't exist, the curl command complains confusingly: jq: error (at <stdin>:4): Cannot index object with number
          run: |
            ./sha_scraper.sh --all-repos ${{ github.event.inputs.max_num_datasets }} 2>&1 | tee -a LOG.txt

            # The following syntax ensures that "repos" is a multiline string, where each line represents one repo
            # See: https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#multiline-strings
            echo 'repos<<EOF' >> "$GITHUB_OUTPUT"
            for line in $(cat repos_for_cli.txt); do
              echo $line >> "$GITHUB_OUTPUT"
            done
            echo 'EOF' >> "$GITHUB_OUTPUT"

        # Upload the log from the sha scraper process for debugging purposes
        - name: Upload log file as artifact
          uses: actions/upload-artifact@v4
          with:
            name: log-file
            path: code/LOG.txt

        - name: Commit and push updated sha.txt and failed_cli_datasets.txt
          # NOTE: git push only has access to whatever branch is currently checked out
          run: |
            if [ "${{ github.event.inputs.reset_failed_datasets }}" == "true" ]; then
              commit_message="[bot] Update record of repo SHAs and reset failed_cli_datasets.txt"
            else
              commit_message="[bot] Update record of repo SHAs"
            fi

            git config user.name "GitHub Actions Bot"
            git config user.email "<>"

            git add code/sha.txt code/failed_cli_datasets.txt
            if ! git diff --cached --quiet; then
              git commit -m "$commit_message"
              git push origin main
            fi

    call-run-cli-on-repo-list:
      needs: get-repos
      # Only run this job if the list of repos is not empty
      if: ${{ needs.get-repos.outputs.dataset_list != '' }}
      uses: OpenNeuroDatasets-JSONLD/.github/.github/workflows/run_cli_on_repo_list.yml@main
      with:
        dataset_list: ${{ needs.get-repos.outputs.dataset_list }}
        clear_old_jsonlds: ${{ github.event.inputs.clear_old_jsonlds == 'true' }}
      secrets: inherit