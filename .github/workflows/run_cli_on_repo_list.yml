# This is a reusable workflow that runs the CLI on a provided list of repos, 
# and uploads the JSONLD files along with the CLI log to a branch in neurobagel/openneuro-annotations.
# The workflow updates the sha.txt file for repos on which the CLI ran successfully.
name: Run CLI on repo list

on:
  workflow_call:
    inputs:
      # NOTE: If this input is empty, the workflow should not run
      dataset_list:
        description: "String representing a list of repos to update"
        required: true
        type: string
      clear_old_jsonlds:
        description: "Whether to delete all existing JSONLD files in neurobagel/openneuro-annotations"
        required: false
        type: boolean
        default: false

jobs:
  batch-run-cli:
    name: Batch run CLI
    runs-on: ubuntu-latest
    outputs:
      were_new_jsonlds_created: ${{ steps.check-jsonlds.outputs.were_new_jsonlds_created }}

    steps:
      - name: Generate a token
        id: generate-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ vars.NB_BOT_ID }}
          private-key: ${{ secrets.NB_BOT_KEY }}
          owner: ${{ github.repository_owner }}

      - name: Checkout
        uses: actions/checkout@v4
        # NOTE: A token is needed if you want to git push to a repo
        with:
          ref: 'main'
          token: ${{ steps.generate-token.outputs.token }}
      
      # git-annex is required for datalad
      # Also setting author info here for Git to suppress datalad warnings
      - name: Install git-annex
        run: |
          sudo apt-get update
          sudo apt-get install git-annex
          echo "git-annex version: $(git-annex version)"
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "<>"

      # TODO: Cache Python dependencies
      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r code/requirements.txt

      - name: Run CLI
        working-directory: code
        # Passing input as a file to avoid issues with multiline strings
        # NOTE: This step also removes the quotes in dataset_list (we add these back inside batch_run_cli.sh)
        run: |
          echo "${{ inputs.dataset_list }}" > dataset_list.txt
          ./batch_run_cli.sh dataset_list.txt 2>&1 | tee -a LOG.txt
      
      - name: Check if new JSONLD files were created
        id: check-jsonlds
        run: |
          if [ -d "code/data/jsonld" ] && [ "$(ls code/data/jsonld)" ]; then
            echo "were_new_jsonlds_created=true" >> "$GITHUB_OUTPUT"
          else
            echo "were_new_jsonlds_created=false" >> "$GITHUB_OUTPUT"
          fi
      
      # TODO: If this gets too slow, try https://github.com/actions/cache
      - name: Upload JSONLD files as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: jsonld-files
          # NOTE: code/data/jsonld is a temporary directory created by code/run_cli_single_dataset.sh
          path: code/data/jsonld
          if-no-files-found: ignore
          # TODO: Add a retention policy to delete old artifacts

      - name: Upload failed BIDS metadata tables as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: failed-bids-tsvs
          # NOTE: code/data/failed_bids_tsv is a temporary directory created by code/run_cli_single_dataset.sh
          path: code/data/failed_bids_tsv
          if-no-files-found: ignore

      - name: Upload CLI log as artifact
        uses: actions/upload-artifact@v4
        with:
          name: cli-log-file
          path: code/LOG.txt

      - name: Upload list of datasets missing annotations as artifact
        uses: actions/upload-artifact@v4
        with:
          name: datasets-missing-annotations
          path: code/datasets_missing_annotations.txt
          if-no-files-found: ignore

      - name: Commit and push updated sha.txt file
        # If sha.txt was not updated (i.e., all datasets failed?), skip this step
        run: |
          # git diff --quiet silences the output and returns 0 if there are no modifications, or 1 if there are modifications
          # 0 is considered "true" in bash, so we negate the condition to have it only evaluate to true if there are differences
          if ! git diff --quiet code/sha.txt; then
            git config user.name "GitHub Actions Bot"
            git config user.email "<>"
            git add code/sha.txt
            git commit -m "[bot] Update record of repo SHAs"
            git push origin main
          fi

  push-updated-files:
    name: Push updated JSONLD files
    runs-on: ubuntu-latest
    needs: batch-run-cli

    steps:
      - name: Generate a token
        id: generate-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ vars.NB_BOT_ID }}
          private-key: ${{ secrets.NB_BOT_KEY }}
          # See https://github.com/actions/create-github-app-token?tab=readme-ov-file#create-a-token-for-all-repositories-in-another-owners-installation
          owner: neurobagel

      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: 'neurobagel/openneuro-annotations'
          ref: 'auto-update-jsonlds'
          token: ${{ steps.generate-token.outputs.token }}

      - name: Clear existing jsonld files
        if: ${{ inputs.clear_old_jsonlds }}
        run: rm jsonld/*

      # NOTE: We need a variable to explicitly check if new JSONLD files were created
      # because download-artifact doesn't offer an if-no-files-found condition
      # and would otherwise fail if there is nothing to download.
      - name: Download JSONLD files artifact
        uses: actions/download-artifact@v4
        if: needs.batch-run-cli.outputs.were_new_jsonlds_created == 'true'
        with:
          name: jsonld-files
          path: jsonld

      - name: Download CLI log artifact
        uses: actions/download-artifact@v4
        with:
          name: cli-log-file
          # NOTE: Path must be a directory, not a file
          path: jsonld

      - name: Download list of datasets missing annotations artifact
        uses: actions/download-artifact@v4
        with:
          name: datasets-missing-annotations
          path: jsonld

      # Sanity check in the case where we want to regenerate JSONLDs for ALL datasets
      # (i.e., clear_old_jsonlds is true)
      # but the CLI run failed to produce any new JSONLD files 
      # - this would most likely indicate a problem on our end.
      - name: Check that there's at least one JSONLD file
        run: |
          if ! find jsonld -type f -name "*.jsonld" | grep -q .; then
            echo "No JSONLD files remaining in the jsonld/ directory, exiting."
            exit 1
          fi

      # Configure git to use the GitHub App's bot user
      # https://github.com/actions/create-github-app-token?tab=readme-ov-file#configure-git-cli-for-an-apps-bot-user
      - name: Get GitHub App User ID
        id: get-user-id
        run: echo "user-id=$(gh api "/users/${{ steps.generate-token.outputs.app-slug }}[bot]" --jq .id)" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ steps.generate-token.outputs.token }}
    
      - name: Configure git
        run: |
          git config --global user.name '${{ steps.generate-token.outputs.app-slug }}[bot]'
          git config --global user.email '${{ steps.get-user-id.outputs.user-id }}+${{ steps.generate-token.outputs.app-slug }}[bot]@users.noreply.github.com'

      - name: Commit and push updated JSONLD files
        run: |
          if ! git diff --quiet jsonld; then
            git add -A jsonld
            git commit -m "[bot] Update JSONLD files and CLI log"
            git push origin auto-update-jsonlds
          fi
